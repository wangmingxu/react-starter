{"version":3,"sources":["webpack:///./Page/From.js"],"names":["From","props","handleChange","state","value","event","setState","target","render"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;;IAGMA,I,GADL,wE;;;AAEC,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAAA,UAInBC,YAJmB;AAAA;AAAA;;AAEjB,UAAKC,KAAL,GAAa,EAAEC,OAAO,OAAT,EAAb;AAFiB;AAGlB;;;;;;;;;;kGACaC,K,EAAU;AACtB,SAAKC,QAAL,CAAc,EAAEF,OAAOC,MAAME,MAAN,CAAaH,KAAtB,EAAd;AACA;AACD,G;;iBACDI,M,qBAAS;AAAA,QACCJ,KADD,GACW,KAAKD,KADhB,CACCC,KADD;;AAEP,WACE;AAAA;AAAA,QAAK,WAAU,KAAf;AACE,6EAAO,MAAK,MAAZ,EAAmB,OAAOA,KAA1B,EAAiC,UAAU,KAAKF,YAAhD,GADF;AAEE;AAAA;AAAA;AAAIE;AAAJ;AAFF,KADF;AAMD,G;;;EAjBgB,gD;;eAoBJJ,I;;;AAAf;;;;;;;;gCApBMA,I","file":"client/js/5.js?636f99fb377435034be8","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\n\n@withRouter\nclass From extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: 'hello' };\n  }\n  handleChange=(event) => {\n    this.setState({ value: event.target.value });\n    // 思考 使用Redux的核心 就是组件不直接修改 state。是否可以在这里，进行发送 dispatch(action)\n  }\n  render() {\n    const { value } = this.state;\n    return (\n      <div className=\"App\">\n        <input type=\"text\" value={value} onChange={this.handleChange} />\n        <p>{value}</p>\n      </div>\n    );\n  }\n}\n\nexport default From;\n\n\n\n// WEBPACK FOOTER //\n// ./Page/From.js"],"sourceRoot":""}